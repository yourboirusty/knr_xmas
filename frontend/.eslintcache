[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3","/app/src/threeD.js":"4","/app/src/DrawingCanvas.js":"5","/app/src/Axios.js":"6"},{"size":1242,"mtime":1608115506340,"results":"7","hashOfConfig":"8"},{"size":486,"mtime":1608051102440,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608049803840,"results":"10","hashOfConfig":"8"},{"size":1971,"mtime":1608070676380,"results":"11","hashOfConfig":"8"},{"size":1635,"mtime":1608070313940,"results":"12","hashOfConfig":"8"},{"size":135,"mtime":1608054542090,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"14yuzcu",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/app/src/index.js",["29","30","31","32","33","34"],"/app/src/App.js",[],["35","36"],"/app/src/reportWebVitals.js",[],["37","38"],"/app/src/threeD.js",["39","40","41"],"import React, { useRef, useState, useMemo } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport * as THREE from 'three'\n\nexport function Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n  })\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxBufferGeometry args={[2, 2, 2]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n\n    </mesh>\n  )\n}\n\nfunction _delete(obj, prop) {\n  if (obj[prop] && ! obj[prop].length) delete obj[prop];\n}\n\nexport function Ball(props){\n  const mesh = useRef()\n  const drawing = useRef()\n  const texture = props.texture\n  console.log(props)\n  // let url = process.env.PUBLIC_URL + '/back/image.png' \n  texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n  useFrame(() => {\n    mesh.current.rotation.y += 0.01\n    drawing.current.rotation.y += 0.01\n  })\n\n  return(\n    <group>\n        <mesh\n        {...props}\n        ref={drawing}\n  scale ={[2.1, 2.1, 2.1]}\n  >\n    <sphereBufferGeometry />\n    <meshPhongMaterial attach=\"material\" transparent map={texture}/>\n\n  </mesh>\n  <mesh\n    {...props}\n    ref={mesh}\n    scale ={[2.1, 2.1, 2.1]}\n    >\n      <sphereBufferGeometry />\n      <meshStandardMaterial color=\"hotpink\" />\n    </mesh>\n    </group>\n  )\n  }\nexport function Scene(){\n  const camera = new THREE.PerspectiveCamera(45, 1, 0.01, 3)\ncamera.position.set(-1, 1.2, 1.5)\ncamera.lookAt(0, 0, 0)\nreturn(\n  <Ball position={[3, 0, 0]} />\n)\n\n\n}\n\n","/app/src/DrawingCanvas.js",[],"/app/src/Axios.js",[],{"ruleId":"42","severity":1,"message":"43","line":7,"column":9,"nodeType":"44","messageId":"45","endLine":7,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":7,"column":14,"nodeType":"44","messageId":"45","endLine":7,"endColumn":18},{"ruleId":"42","severity":1,"message":"47","line":8,"column":8,"nodeType":"44","messageId":"45","endLine":8,"endColumn":21},{"ruleId":"42","severity":1,"message":"48","line":10,"column":10,"nodeType":"44","messageId":"45","endLine":10,"endColumn":16},{"ruleId":"42","severity":1,"message":"49","line":10,"column":18,"nodeType":"44","messageId":"45","endLine":10,"endColumn":26},{"ruleId":"42","severity":1,"message":"50","line":15,"column":7,"nodeType":"44","messageId":"45","endLine":15,"endColumn":14},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"42","severity":1,"message":"57","line":1,"column":35,"nodeType":"44","messageId":"45","endLine":1,"endColumn":42},{"ruleId":"42","severity":1,"message":"48","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":16},{"ruleId":"42","severity":1,"message":"58","line":33,"column":10,"nodeType":"44","messageId":"45","endLine":33,"endColumn":17},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Ball' is defined but never used.","'DrawingCanvas' is defined but never used.","'Canvas' is defined but never used.","'useFrame' is defined but never used.","'texture' is assigned a value but never used.","no-native-reassign",["59"],"no-negated-in-lhs",["60"],["59"],["60"],"'useMemo' is defined but never used.","'_delete' is defined but never used.","no-global-assign","no-unsafe-negation"]